!function(r){"use strict";let c={loading:!0,websocket:null,xraySession:null,backendHost:"http://localhost:8000",currentUser:null,isInitialized:!1,config:{}};function l(){let e=localStorage.getItem("xray_device_id");return e||(e=`device_${(new Date).getTime()}_`+Math.floor(1e6*Math.random()),localStorage.setItem("xray_device_id",e)),e}async function o(){if(c.websocket)if(c.xraySession){var e=(new Date).toISOString();try{var t={type:"event",event_type:"page_view",timestamp:e,path:r.location.pathname};c.websocket.send(JSON.stringify(t)),c.xraySession.events||(c.xraySession.events=[]),c.xraySession.events.push(t)}catch(e){console.error("Failed to create page view event",{error:e.message,stack:e.stack})}}else console.warn("XRAY Session is not initialized.");else console.warn("XRAY WebSocket is not open.")}async function s(){await e(!document.hidden)}async function e(e){e={type:"event",event_type:e?"active_tab":"leave_tab",timestamp:(new Date).toISOString()};c.websocket.send(JSON.stringify(e)),c.xraySession.events||(c.xraySession.events=[]),c.xraySession.events.push(e)}function a(t){if(c.websocket)console.log("WebSocket is already open, skipping connection attempt");else{var n=c.backendHost.replace("http","ws");const s=sessionStorage.getItem("xray_session_id");let e=n+"/ws/xray";n=[];t&&n.push("token="+t),s&&n.push("session_id="+s),0<n.length&&(e+="?"+n.join("&"));const a=new WebSocket(e);a.onopen=async()=>{console.log("WebSocket connection established");try{var e=l();n=navigator.connection||navigator.mozConnection||navigator.webkitConnection,i=Intl.DateTimeFormat().resolvedOptions().timeZone,o=navigator.languages||[navigator.language];var t={device_id:e,device_info:await{user_agent:navigator.userAgent,language:navigator.language,languages:o,timezone:i,cookie_enabled:navigator.cookieEnabled,screen_width:screen.width,screen_height:screen.height,screen_color_depth:screen.colorDepth,viewport_width:r.innerWidth,viewport_height:r.innerHeight,pathname:r.location.pathname,referrer:document.referrer,network_type:n?n.effectiveType:"unknown",network_downlink:n?n.downlink:null,network_rtt:n?n.rtt:null},origin:r.location.origin};s&&(t.session_id=s),console.log({initMessage:t}),a.send(JSON.stringify(t)),a.addEventListener("message",e=>{var e=JSON.parse(e.data);"session_created"===e.type&&(e=e.data,c.xraySession={id:e.session_id,device_id:e.device_id,events:[]},sessionStorage.setItem("xray_session_id",e.session_id),c.initPromiseResolve)&&(c.initPromiseResolve(c.xraySession),c.initPromiseResolve=null)},{once:!1}),c.websocket=a,c.isInitialized=!0,c.loading=!1}catch(e){console.error("Failed to initialize XRAY after WebSocket connection",{error:e.message,stack:e.stack}),c.loading=!1}var n,i,o},c.websocket=a}}r.XRAY={initialize:async function(e={}){if(c.isInitialized)return console.log("XRAY already initialized, returning existing session"),c.xraySession;c.config={...e},c.backendHost=e.backendHost||"http://localhost:8000",c.loading=!0;try{var t=localStorage.getItem("CapacitorStorage.token");r.addEventListener("popstate",o),r.addEventListener("visibilitychange",s);const n=history.pushState,i=history.replaceState;return history.pushState=function(...e){n.apply(history,e),setTimeout(o,0)},history.replaceState=function(...e){i.apply(history,e),setTimeout(o,0)},a(t),new Promise(e=>{const t=()=>{c.xraySession?e(c.xraySession):c.loading?setTimeout(t,100):e(null)};t()})}catch(e){return console.error("Failed to initialize XRAY",{error:e.message,stack:e.stack}),c.loading=!1,null}}}}(window);